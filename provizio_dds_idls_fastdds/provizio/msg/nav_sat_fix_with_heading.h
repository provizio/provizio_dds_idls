// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file nav_sat_fix_with_heading.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_PROVIZIO_MSG_NAV_SAT_FIX_WITH_HEADING_H_
#define _FAST_DDS_GENERATED_PROVIZIO_MSG_NAV_SAT_FIX_WITH_HEADING_H_

#include <array>
#include <bitset>
#include <cstdint>
#include <map>
#include <string>
#include <vector>

#include <fastcdr/cdr/fixed_size_string.hpp>
#include <fastcdr/xcdr/optional.hpp>

#include "std_msgs/msg/Header.h"


#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(NAV_SAT_FIX_WITH_HEADING_SOURCE)
#define NAV_SAT_FIX_WITH_HEADING_DllAPI __declspec( dllexport )
#else
#define NAV_SAT_FIX_WITH_HEADING_DllAPI __declspec( dllimport )
#endif // NAV_SAT_FIX_WITH_HEADING_SOURCE
#else
#define NAV_SAT_FIX_WITH_HEADING_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define NAV_SAT_FIX_WITH_HEADING_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
class CdrSizeCalculator;
} // namespace fastcdr
} // namespace eprosima



namespace provizio {
    namespace msg {
        /*!
         * @brief This class represents the structure nav_sat_fix_with_heading defined by the user in the IDL file.
         * @ingroup nav_sat_fix_with_heading
         */
        class nav_sat_fix_with_heading
        {
        public:

            /*!
             * @brief Default constructor.
             */
            eProsima_user_DllExport nav_sat_fix_with_heading();

            /*!
             * @brief Default destructor.
             */
            eProsima_user_DllExport ~nav_sat_fix_with_heading();

            /*!
             * @brief Copy constructor.
             * @param x Reference to the object provizio::msg::nav_sat_fix_with_heading that will be copied.
             */
            eProsima_user_DllExport nav_sat_fix_with_heading(
                    const nav_sat_fix_with_heading& x);

            /*!
             * @brief Move constructor.
             * @param x Reference to the object provizio::msg::nav_sat_fix_with_heading that will be copied.
             */
            eProsima_user_DllExport nav_sat_fix_with_heading(
                    nav_sat_fix_with_heading&& x) noexcept;

            /*!
             * @brief Copy assignment.
             * @param x Reference to the object provizio::msg::nav_sat_fix_with_heading that will be copied.
             */
            eProsima_user_DllExport nav_sat_fix_with_heading& operator =(
                    const nav_sat_fix_with_heading& x);

            /*!
             * @brief Move assignment.
             * @param x Reference to the object provizio::msg::nav_sat_fix_with_heading that will be copied.
             */
            eProsima_user_DllExport nav_sat_fix_with_heading& operator =(
                    nav_sat_fix_with_heading&& x) noexcept;

            /*!
             * @brief Comparison operator.
             * @param x provizio::msg::nav_sat_fix_with_heading object to compare.
             */
            eProsima_user_DllExport bool operator ==(
                    const nav_sat_fix_with_heading& x) const;

            /*!
             * @brief Comparison operator.
             * @param x provizio::msg::nav_sat_fix_with_heading object to compare.
             */
            eProsima_user_DllExport bool operator !=(
                    const nav_sat_fix_with_heading& x) const;

            /*!
             * @brief This function copies the value in member header
             * @param _header New value to be copied in member header
             */
            eProsima_user_DllExport void header(
                    const std_msgs::msg::Header& _header);

            /*!
             * @brief This function moves the value in member header
             * @param _header New value to be moved in member header
             */
            eProsima_user_DllExport void header(
                    std_msgs::msg::Header&& _header);

            /*!
             * @brief This function returns a constant reference to member header
             * @return Constant reference to member header
             */
            eProsima_user_DllExport const std_msgs::msg::Header& header() const;

            /*!
             * @brief This function returns a reference to member header
             * @return Reference to member header
             */
            eProsima_user_DllExport std_msgs::msg::Header& header();


            /*!
             * @brief This function sets a value in member latitude
             * @param _latitude New value for member latitude
             */
            eProsima_user_DllExport void latitude(
                    double _latitude);

            /*!
             * @brief This function returns the value of member latitude
             * @return Value of member latitude
             */
            eProsima_user_DllExport double latitude() const;

            /*!
             * @brief This function returns a reference to member latitude
             * @return Reference to member latitude
             */
            eProsima_user_DllExport double& latitude();


            /*!
             * @brief This function sets a value in member longitude
             * @param _longitude New value for member longitude
             */
            eProsima_user_DllExport void longitude(
                    double _longitude);

            /*!
             * @brief This function returns the value of member longitude
             * @return Value of member longitude
             */
            eProsima_user_DllExport double longitude() const;

            /*!
             * @brief This function returns a reference to member longitude
             * @return Reference to member longitude
             */
            eProsima_user_DllExport double& longitude();


            /*!
             * @brief This function sets a value in member altitude
             * @param _altitude New value for member altitude
             */
            eProsima_user_DllExport void altitude(
                    double _altitude);

            /*!
             * @brief This function returns the value of member altitude
             * @return Value of member altitude
             */
            eProsima_user_DllExport double altitude() const;

            /*!
             * @brief This function returns a reference to member altitude
             * @return Reference to member altitude
             */
            eProsima_user_DllExport double& altitude();


            /*!
             * @brief This function sets a value in member heading
             * @param _heading New value for member heading
             */
            eProsima_user_DllExport void heading(
                    double _heading);

            /*!
             * @brief This function returns the value of member heading
             * @return Value of member heading
             */
            eProsima_user_DllExport double heading() const;

            /*!
             * @brief This function returns a reference to member heading
             * @return Reference to member heading
             */
            eProsima_user_DllExport double& heading();

        private:

            std_msgs::msg::Header m_header;
            double m_latitude{0.0};
            double m_longitude{0.0};
            double m_altitude{0.0};
            double m_heading{0.0};

        };
    } // namespace msg
} // namespace provizio

#endif // _FAST_DDS_GENERATED_PROVIZIO_MSG_NAV_SAT_FIX_WITH_HEADING_H_

