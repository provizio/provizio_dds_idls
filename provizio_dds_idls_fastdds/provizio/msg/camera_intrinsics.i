// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file camera_intrinsics.i
 * This header file contains the SWIG interface of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

%module camera_intrinsics

// SWIG helper modules
%include "stdint.i"
%include "std_array.i"
%include "std_map.i"
%include "std_string.i"
%include "std_vector.i"
%include "typemaps.i"

// Assignemt operators are ignored, as there is no such thing in Python.
// Trying to export them issues a warning
%ignore *::operator=;

// Macro declarations
// Any macro used on the Fast DDS header files will give an error if it is not redefined here
#define RTPS_DllAPI
#define eProsima_user_DllExport

%include "std_msgs/msg/Header.i"

%{
#include "camera_intrinsics.h"

#include <fastdds/dds/core/LoanableSequence.hpp>
%}

%import(module="fastdds") "fastdds/dds/core/LoanableCollection.hpp"
%import(module="fastdds") "fastdds/dds/core/LoanableTypedCollection.hpp"
%import(module="fastdds") "fastdds/dds/core/LoanableSequence.hpp"

////////////////////////////////////////////////////////
// Binding for class provizio::msg::camera_intrinsics_precise_model
////////////////////////////////////////////////////////

// Ignore overloaded methods that have no application on Python
// Otherwise they will issue a warning
%ignore provizio::msg::camera_intrinsics_precise_model::camera_intrinsics_precise_model(provizio::msg::camera_intrinsics_precise_model&&);

// Overloaded getter methods shadow each other and are equivalent in python
// Avoid a warning ignoring all but one
%ignore provizio::msg::camera_intrinsics_precise_model::camera_matrix(std::array<float, 9>&&);

// Overloaded getter methods shadow each other and are equivalent in python
// Const accesors produced constant enums instead of arrays/dictionaries when used
// We ignore them to prevent this
%ignore provizio::msg::camera_intrinsics_precise_model::camera_matrix() const;
%template(float_9_array) std::array<float,9>;
%extend std::array<float, 9>
{
    const float* get_buffer() const
    {
        return self->data();
    }
}

%ignore provizio::msg::camera_intrinsics_precise_model::distortion_coefficients(std::array<float, 8>&&);

// Overloaded getter methods shadow each other and are equivalent in python
// Const accesors produced constant enums instead of arrays/dictionaries when used
// We ignore them to prevent this
%ignore provizio::msg::camera_intrinsics_precise_model::distortion_coefficients() const;
%template(float_8_array) std::array<float,8>;
%extend std::array<float, 8>
{
    const float* get_buffer() const
    {
        return self->data();
    }
}


%template(_camera_intrinsics_precise_modelSeq) eprosima::fastdds::dds::LoanableTypedCollection<provizio::msg::camera_intrinsics_precise_model, std::false_type>;
%template(camera_intrinsics_precise_modelSeq) eprosima::fastdds::dds::LoanableSequence<provizio::msg::camera_intrinsics_precise_model, std::false_type>;
%extend eprosima::fastdds::dds::LoanableSequence<provizio::msg::camera_intrinsics_precise_model, std::false_type>
{
    size_t __len__() const
    {
        return self->length();
    }

    const provizio::msg::camera_intrinsics_precise_model& __getitem__(size_t i) const
    {
        return (*self)[i];
    }
}

////////////////////////////////////////////////////////
// Binding for class provizio::msg::camera_intrinsics_perspective
////////////////////////////////////////////////////////

// Ignore overloaded methods that have no application on Python
// Otherwise they will issue a warning
%ignore provizio::msg::camera_intrinsics_perspective::camera_intrinsics_perspective(provizio::msg::camera_intrinsics_perspective&&);

// Overloaded getter methods shadow each other and are equivalent in python
// Avoid a warning ignoring all but one
%ignore provizio::msg::camera_intrinsics_perspective::hfov(float&&);

// Overloaded getter methods shadow each other and are equivalent in python
// Const accesors produced constant enums instead of arrays/dictionaries when used
// We ignore them to prevent this
%ignore provizio::msg::camera_intrinsics_perspective::hfov();
%rename("%s") provizio::msg::camera_intrinsics_perspective::hfov() const;


%ignore provizio::msg::camera_intrinsics_perspective::precise_model(provizio::msg::camera_intrinsics_precise_model&&);

// Overloaded getter methods shadow each other and are equivalent in python
// Const accesors produced constant enums instead of arrays/dictionaries when used
// We ignore them to prevent this
%ignore provizio::msg::camera_intrinsics_perspective::precise_model();
%rename("%s") provizio::msg::camera_intrinsics_perspective::precise_model() const;



%template(_camera_intrinsics_perspectiveSeq) eprosima::fastdds::dds::LoanableTypedCollection<provizio::msg::camera_intrinsics_perspective, std::false_type>;
%template(camera_intrinsics_perspectiveSeq) eprosima::fastdds::dds::LoanableSequence<provizio::msg::camera_intrinsics_perspective, std::false_type>;
%extend eprosima::fastdds::dds::LoanableSequence<provizio::msg::camera_intrinsics_perspective, std::false_type>
{
    size_t __len__() const
    {
        return self->length();
    }

    const provizio::msg::camera_intrinsics_perspective& __getitem__(size_t i) const
    {
        return (*self)[i];
    }
}

////////////////////////////////////////////////////////
// Binding for class provizio::msg::camera_intrinsics_orthographic
////////////////////////////////////////////////////////

// Ignore overloaded methods that have no application on Python
// Otherwise they will issue a warning
%ignore provizio::msg::camera_intrinsics_orthographic::camera_intrinsics_orthographic(provizio::msg::camera_intrinsics_orthographic&&);

// Overloaded getter methods shadow each other and are equivalent in python
// Avoid a warning ignoring all but one
%ignore provizio::msg::camera_intrinsics_orthographic::width(float&&);

// Overloaded getter methods shadow each other and are equivalent in python
// Const accesors produced constant enums instead of arrays/dictionaries when used
// We ignore them to prevent this
%ignore provizio::msg::camera_intrinsics_orthographic::width();
%rename("%s") provizio::msg::camera_intrinsics_orthographic::width() const;


%ignore provizio::msg::camera_intrinsics_orthographic::height(float&&);

// Overloaded getter methods shadow each other and are equivalent in python
// Const accesors produced constant enums instead of arrays/dictionaries when used
// We ignore them to prevent this
%ignore provizio::msg::camera_intrinsics_orthographic::height();
%rename("%s") provizio::msg::camera_intrinsics_orthographic::height() const;



%template(_camera_intrinsics_orthographicSeq) eprosima::fastdds::dds::LoanableTypedCollection<provizio::msg::camera_intrinsics_orthographic, std::false_type>;
%template(camera_intrinsics_orthographicSeq) eprosima::fastdds::dds::LoanableSequence<provizio::msg::camera_intrinsics_orthographic, std::false_type>;
%extend eprosima::fastdds::dds::LoanableSequence<provizio::msg::camera_intrinsics_orthographic, std::false_type>
{
    size_t __len__() const
    {
        return self->length();
    }

    const provizio::msg::camera_intrinsics_orthographic& __getitem__(size_t i) const
    {
        return (*self)[i];
    }
}

////////////////////////////////////////////////////////
// Binding for class provizio::msg::camera_intrinsics
////////////////////////////////////////////////////////

// Ignore overloaded methods that have no application on Python
// Otherwise they will issue a warning
%ignore provizio::msg::camera_intrinsics::camera_intrinsics(provizio::msg::camera_intrinsics&&);

// Overloaded getter methods shadow each other and are equivalent in python
// Avoid a warning ignoring all but one
%ignore provizio::msg::camera_intrinsics::header(std_msgs::msg::Header&&);

// Overloaded getter methods shadow each other and are equivalent in python
// Const accesors produced constant enums instead of arrays/dictionaries when used
// We ignore them to prevent this
%ignore provizio::msg::camera_intrinsics::header();
%rename("%s") provizio::msg::camera_intrinsics::header() const;


%ignore provizio::msg::camera_intrinsics::perspective(provizio::msg::camera_intrinsics_perspective&&);

// Overloaded getter methods shadow each other and are equivalent in python
// Const accesors produced constant enums instead of arrays/dictionaries when used
// We ignore them to prevent this
%ignore provizio::msg::camera_intrinsics::perspective();
%rename("%s") provizio::msg::camera_intrinsics::perspective() const;


%ignore provizio::msg::camera_intrinsics::orthographic(provizio::msg::camera_intrinsics_orthographic&&);

// Overloaded getter methods shadow each other and are equivalent in python
// Const accesors produced constant enums instead of arrays/dictionaries when used
// We ignore them to prevent this
%ignore provizio::msg::camera_intrinsics::orthographic();
%rename("%s") provizio::msg::camera_intrinsics::orthographic() const;



%template(_camera_intrinsicsSeq) eprosima::fastdds::dds::LoanableTypedCollection<provizio::msg::camera_intrinsics, std::false_type>;
%template(camera_intrinsicsSeq) eprosima::fastdds::dds::LoanableSequence<provizio::msg::camera_intrinsics, std::false_type>;
%extend eprosima::fastdds::dds::LoanableSequence<provizio::msg::camera_intrinsics, std::false_type>
{
    size_t __len__() const
    {
        return self->length();
    }

    const provizio::msg::camera_intrinsics& __getitem__(size_t i) const
    {
        return (*self)[i];
    }
}




// Include the class interfaces
%include "camera_intrinsics.h"

// Include the corresponding TopicDataType
%include "camera_intrinsicsPubSubTypes.i"

