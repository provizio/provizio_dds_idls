// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file MultiArrayDimension.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_STD_MSGS_MSG_MULTIARRAYDIMENSION_H_
#define _FAST_DDS_GENERATED_STD_MSGS_MSG_MULTIARRAYDIMENSION_H_

#include <array>
#include <bitset>
#include <cstdint>
#include <map>
#include <string>
#include <vector>

#include <fastcdr/cdr/fixed_size_string.hpp>
#include <fastcdr/xcdr/optional.hpp>



#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(MULTIARRAYDIMENSION_SOURCE)
#define MULTIARRAYDIMENSION_DllAPI __declspec( dllexport )
#else
#define MULTIARRAYDIMENSION_DllAPI __declspec( dllimport )
#endif // MULTIARRAYDIMENSION_SOURCE
#else
#define MULTIARRAYDIMENSION_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define MULTIARRAYDIMENSION_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
class CdrSizeCalculator;
} // namespace fastcdr
} // namespace eprosima



namespace std_msgs {
    namespace msg {
        /*!
         * @brief This class represents the structure MultiArrayDimension defined by the user in the IDL file.
         * @ingroup MultiArrayDimension
         */
        class MultiArrayDimension
        {
        public:

            /*!
             * @brief Default constructor.
             */
            eProsima_user_DllExport MultiArrayDimension();

            /*!
             * @brief Default destructor.
             */
            eProsima_user_DllExport ~MultiArrayDimension();

            /*!
             * @brief Copy constructor.
             * @param x Reference to the object std_msgs::msg::MultiArrayDimension that will be copied.
             */
            eProsima_user_DllExport MultiArrayDimension(
                    const MultiArrayDimension& x);

            /*!
             * @brief Move constructor.
             * @param x Reference to the object std_msgs::msg::MultiArrayDimension that will be copied.
             */
            eProsima_user_DllExport MultiArrayDimension(
                    MultiArrayDimension&& x) noexcept;

            /*!
             * @brief Copy assignment.
             * @param x Reference to the object std_msgs::msg::MultiArrayDimension that will be copied.
             */
            eProsima_user_DllExport MultiArrayDimension& operator =(
                    const MultiArrayDimension& x);

            /*!
             * @brief Move assignment.
             * @param x Reference to the object std_msgs::msg::MultiArrayDimension that will be copied.
             */
            eProsima_user_DllExport MultiArrayDimension& operator =(
                    MultiArrayDimension&& x) noexcept;

            /*!
             * @brief Comparison operator.
             * @param x std_msgs::msg::MultiArrayDimension object to compare.
             */
            eProsima_user_DllExport bool operator ==(
                    const MultiArrayDimension& x) const;

            /*!
             * @brief Comparison operator.
             * @param x std_msgs::msg::MultiArrayDimension object to compare.
             */
            eProsima_user_DllExport bool operator !=(
                    const MultiArrayDimension& x) const;

            /*!
             * @brief This function copies the value in member label
             * @param _label New value to be copied in member label
             */
            eProsima_user_DllExport void label(
                    const std::string& _label);

            /*!
             * @brief This function moves the value in member label
             * @param _label New value to be moved in member label
             */
            eProsima_user_DllExport void label(
                    std::string&& _label);

            /*!
             * @brief This function returns a constant reference to member label
             * @return Constant reference to member label
             */
            eProsima_user_DllExport const std::string& label() const;

            /*!
             * @brief This function returns a reference to member label
             * @return Reference to member label
             */
            eProsima_user_DllExport std::string& label();


            /*!
             * @brief This function sets a value in member size
             * @param _size New value for member size
             */
            eProsima_user_DllExport void size(
                    uint32_t _size);

            /*!
             * @brief This function returns the value of member size
             * @return Value of member size
             */
            eProsima_user_DllExport uint32_t size() const;

            /*!
             * @brief This function returns a reference to member size
             * @return Reference to member size
             */
            eProsima_user_DllExport uint32_t& size();


            /*!
             * @brief This function sets a value in member stride
             * @param _stride New value for member stride
             */
            eProsima_user_DllExport void stride(
                    uint32_t _stride);

            /*!
             * @brief This function returns the value of member stride
             * @return Value of member stride
             */
            eProsima_user_DllExport uint32_t stride() const;

            /*!
             * @brief This function returns a reference to member stride
             * @return Reference to member stride
             */
            eProsima_user_DllExport uint32_t& stride();

        private:

            std::string m_label;
            uint32_t m_size{0};
            uint32_t m_stride{0};

        };
    } // namespace msg
} // namespace std_msgs

#endif // _FAST_DDS_GENERATED_STD_MSGS_MSG_MULTIARRAYDIMENSION_H_

