// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file SetMap.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_NAV_MSGS_SRV_SETMAP_H_
#define _FAST_DDS_GENERATED_NAV_MSGS_SRV_SETMAP_H_

#include <array>
#include <bitset>
#include <cstdint>
#include <map>
#include <string>
#include <vector>

#include <fastcdr/cdr/fixed_size_string.hpp>
#include <fastcdr/xcdr/optional.hpp>

#include "nav_msgs/msg/OccupancyGrid.h"
#include "geometry_msgs/msg/PoseWithCovarianceStamped.h"


#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(SETMAP_SOURCE)
#define SETMAP_DllAPI __declspec( dllexport )
#else
#define SETMAP_DllAPI __declspec( dllimport )
#endif // SETMAP_SOURCE
#else
#define SETMAP_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define SETMAP_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
class CdrSizeCalculator;
} // namespace fastcdr
} // namespace eprosima



namespace nav_msgs {
    namespace srv {
        /*!
         * @brief This class represents the structure SetMap_Request defined by the user in the IDL file.
         * @ingroup SetMap
         */
        class SetMap_Request
        {
        public:

            /*!
             * @brief Default constructor.
             */
            eProsima_user_DllExport SetMap_Request();

            /*!
             * @brief Default destructor.
             */
            eProsima_user_DllExport ~SetMap_Request();

            /*!
             * @brief Copy constructor.
             * @param x Reference to the object nav_msgs::srv::SetMap_Request that will be copied.
             */
            eProsima_user_DllExport SetMap_Request(
                    const SetMap_Request& x);

            /*!
             * @brief Move constructor.
             * @param x Reference to the object nav_msgs::srv::SetMap_Request that will be copied.
             */
            eProsima_user_DllExport SetMap_Request(
                    SetMap_Request&& x) noexcept;

            /*!
             * @brief Copy assignment.
             * @param x Reference to the object nav_msgs::srv::SetMap_Request that will be copied.
             */
            eProsima_user_DllExport SetMap_Request& operator =(
                    const SetMap_Request& x);

            /*!
             * @brief Move assignment.
             * @param x Reference to the object nav_msgs::srv::SetMap_Request that will be copied.
             */
            eProsima_user_DllExport SetMap_Request& operator =(
                    SetMap_Request&& x) noexcept;

            /*!
             * @brief Comparison operator.
             * @param x nav_msgs::srv::SetMap_Request object to compare.
             */
            eProsima_user_DllExport bool operator ==(
                    const SetMap_Request& x) const;

            /*!
             * @brief Comparison operator.
             * @param x nav_msgs::srv::SetMap_Request object to compare.
             */
            eProsima_user_DllExport bool operator !=(
                    const SetMap_Request& x) const;

            /*!
             * @brief This function copies the value in member the_map
             * @param _the_map New value to be copied in member the_map
             */
            eProsima_user_DllExport void the_map(
                    const nav_msgs::msg::OccupancyGrid& _the_map);

            /*!
             * @brief This function moves the value in member the_map
             * @param _the_map New value to be moved in member the_map
             */
            eProsima_user_DllExport void the_map(
                    nav_msgs::msg::OccupancyGrid&& _the_map);

            /*!
             * @brief This function returns a constant reference to member the_map
             * @return Constant reference to member the_map
             */
            eProsima_user_DllExport const nav_msgs::msg::OccupancyGrid& the_map() const;

            /*!
             * @brief This function returns a reference to member the_map
             * @return Reference to member the_map
             */
            eProsima_user_DllExport nav_msgs::msg::OccupancyGrid& the_map();


            /*!
             * @brief This function copies the value in member initial_pose
             * @param _initial_pose New value to be copied in member initial_pose
             */
            eProsima_user_DllExport void initial_pose(
                    const geometry_msgs::msg::PoseWithCovarianceStamped& _initial_pose);

            /*!
             * @brief This function moves the value in member initial_pose
             * @param _initial_pose New value to be moved in member initial_pose
             */
            eProsima_user_DllExport void initial_pose(
                    geometry_msgs::msg::PoseWithCovarianceStamped&& _initial_pose);

            /*!
             * @brief This function returns a constant reference to member initial_pose
             * @return Constant reference to member initial_pose
             */
            eProsima_user_DllExport const geometry_msgs::msg::PoseWithCovarianceStamped& initial_pose() const;

            /*!
             * @brief This function returns a reference to member initial_pose
             * @return Reference to member initial_pose
             */
            eProsima_user_DllExport geometry_msgs::msg::PoseWithCovarianceStamped& initial_pose();

        private:

            nav_msgs::msg::OccupancyGrid m_the_map;
            geometry_msgs::msg::PoseWithCovarianceStamped m_initial_pose;

        };
        /*!
         * @brief This class represents the structure SetMap_Response defined by the user in the IDL file.
         * @ingroup SetMap
         */
        class SetMap_Response
        {
        public:

            /*!
             * @brief Default constructor.
             */
            eProsima_user_DllExport SetMap_Response();

            /*!
             * @brief Default destructor.
             */
            eProsima_user_DllExport ~SetMap_Response();

            /*!
             * @brief Copy constructor.
             * @param x Reference to the object nav_msgs::srv::SetMap_Response that will be copied.
             */
            eProsima_user_DllExport SetMap_Response(
                    const SetMap_Response& x);

            /*!
             * @brief Move constructor.
             * @param x Reference to the object nav_msgs::srv::SetMap_Response that will be copied.
             */
            eProsima_user_DllExport SetMap_Response(
                    SetMap_Response&& x) noexcept;

            /*!
             * @brief Copy assignment.
             * @param x Reference to the object nav_msgs::srv::SetMap_Response that will be copied.
             */
            eProsima_user_DllExport SetMap_Response& operator =(
                    const SetMap_Response& x);

            /*!
             * @brief Move assignment.
             * @param x Reference to the object nav_msgs::srv::SetMap_Response that will be copied.
             */
            eProsima_user_DllExport SetMap_Response& operator =(
                    SetMap_Response&& x) noexcept;

            /*!
             * @brief Comparison operator.
             * @param x nav_msgs::srv::SetMap_Response object to compare.
             */
            eProsima_user_DllExport bool operator ==(
                    const SetMap_Response& x) const;

            /*!
             * @brief Comparison operator.
             * @param x nav_msgs::srv::SetMap_Response object to compare.
             */
            eProsima_user_DllExport bool operator !=(
                    const SetMap_Response& x) const;

            /*!
             * @brief This function sets a value in member success
             * @param _success New value for member success
             */
            eProsima_user_DllExport void success(
                    bool _success);

            /*!
             * @brief This function returns the value of member success
             * @return Value of member success
             */
            eProsima_user_DllExport bool success() const;

            /*!
             * @brief This function returns a reference to member success
             * @return Reference to member success
             */
            eProsima_user_DllExport bool& success();

        private:

            bool m_success{false};

        };
    } // namespace srv
} // namespace nav_msgs

#endif // _FAST_DDS_GENERATED_NAV_MSGS_SRV_SETMAP_H_

