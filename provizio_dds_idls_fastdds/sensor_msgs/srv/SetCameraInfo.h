// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file SetCameraInfo.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_SENSOR_MSGS_SRV_SETCAMERAINFO_H_
#define _FAST_DDS_GENERATED_SENSOR_MSGS_SRV_SETCAMERAINFO_H_

#include <array>
#include <bitset>
#include <cstdint>
#include <map>
#include <string>
#include <vector>

#include <fastcdr/cdr/fixed_size_string.hpp>
#include <fastcdr/xcdr/optional.hpp>

#include "sensor_msgs/msg/CameraInfo.h"


#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(SETCAMERAINFO_SOURCE)
#define SETCAMERAINFO_DllAPI __declspec( dllexport )
#else
#define SETCAMERAINFO_DllAPI __declspec( dllimport )
#endif // SETCAMERAINFO_SOURCE
#else
#define SETCAMERAINFO_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define SETCAMERAINFO_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
class CdrSizeCalculator;
} // namespace fastcdr
} // namespace eprosima



namespace sensor_msgs {
    namespace srv {
        /*!
         * @brief This class represents the structure SetCameraInfo_Request defined by the user in the IDL file.
         * @ingroup SetCameraInfo
         */
        class SetCameraInfo_Request
        {
        public:

            /*!
             * @brief Default constructor.
             */
            eProsima_user_DllExport SetCameraInfo_Request();

            /*!
             * @brief Default destructor.
             */
            eProsima_user_DllExport ~SetCameraInfo_Request();

            /*!
             * @brief Copy constructor.
             * @param x Reference to the object sensor_msgs::srv::SetCameraInfo_Request that will be copied.
             */
            eProsima_user_DllExport SetCameraInfo_Request(
                    const SetCameraInfo_Request& x);

            /*!
             * @brief Move constructor.
             * @param x Reference to the object sensor_msgs::srv::SetCameraInfo_Request that will be copied.
             */
            eProsima_user_DllExport SetCameraInfo_Request(
                    SetCameraInfo_Request&& x) noexcept;

            /*!
             * @brief Copy assignment.
             * @param x Reference to the object sensor_msgs::srv::SetCameraInfo_Request that will be copied.
             */
            eProsima_user_DllExport SetCameraInfo_Request& operator =(
                    const SetCameraInfo_Request& x);

            /*!
             * @brief Move assignment.
             * @param x Reference to the object sensor_msgs::srv::SetCameraInfo_Request that will be copied.
             */
            eProsima_user_DllExport SetCameraInfo_Request& operator =(
                    SetCameraInfo_Request&& x) noexcept;

            /*!
             * @brief Comparison operator.
             * @param x sensor_msgs::srv::SetCameraInfo_Request object to compare.
             */
            eProsima_user_DllExport bool operator ==(
                    const SetCameraInfo_Request& x) const;

            /*!
             * @brief Comparison operator.
             * @param x sensor_msgs::srv::SetCameraInfo_Request object to compare.
             */
            eProsima_user_DllExport bool operator !=(
                    const SetCameraInfo_Request& x) const;

            /*!
             * @brief This function copies the value in member camera_info
             * @param _camera_info New value to be copied in member camera_info
             */
            eProsima_user_DllExport void camera_info(
                    const sensor_msgs::msg::CameraInfo& _camera_info);

            /*!
             * @brief This function moves the value in member camera_info
             * @param _camera_info New value to be moved in member camera_info
             */
            eProsima_user_DllExport void camera_info(
                    sensor_msgs::msg::CameraInfo&& _camera_info);

            /*!
             * @brief This function returns a constant reference to member camera_info
             * @return Constant reference to member camera_info
             */
            eProsima_user_DllExport const sensor_msgs::msg::CameraInfo& camera_info() const;

            /*!
             * @brief This function returns a reference to member camera_info
             * @return Reference to member camera_info
             */
            eProsima_user_DllExport sensor_msgs::msg::CameraInfo& camera_info();

        private:

            sensor_msgs::msg::CameraInfo m_camera_info;

        };
        /*!
         * @brief This class represents the structure SetCameraInfo_Response defined by the user in the IDL file.
         * @ingroup SetCameraInfo
         */
        class SetCameraInfo_Response
        {
        public:

            /*!
             * @brief Default constructor.
             */
            eProsima_user_DllExport SetCameraInfo_Response();

            /*!
             * @brief Default destructor.
             */
            eProsima_user_DllExport ~SetCameraInfo_Response();

            /*!
             * @brief Copy constructor.
             * @param x Reference to the object sensor_msgs::srv::SetCameraInfo_Response that will be copied.
             */
            eProsima_user_DllExport SetCameraInfo_Response(
                    const SetCameraInfo_Response& x);

            /*!
             * @brief Move constructor.
             * @param x Reference to the object sensor_msgs::srv::SetCameraInfo_Response that will be copied.
             */
            eProsima_user_DllExport SetCameraInfo_Response(
                    SetCameraInfo_Response&& x) noexcept;

            /*!
             * @brief Copy assignment.
             * @param x Reference to the object sensor_msgs::srv::SetCameraInfo_Response that will be copied.
             */
            eProsima_user_DllExport SetCameraInfo_Response& operator =(
                    const SetCameraInfo_Response& x);

            /*!
             * @brief Move assignment.
             * @param x Reference to the object sensor_msgs::srv::SetCameraInfo_Response that will be copied.
             */
            eProsima_user_DllExport SetCameraInfo_Response& operator =(
                    SetCameraInfo_Response&& x) noexcept;

            /*!
             * @brief Comparison operator.
             * @param x sensor_msgs::srv::SetCameraInfo_Response object to compare.
             */
            eProsima_user_DllExport bool operator ==(
                    const SetCameraInfo_Response& x) const;

            /*!
             * @brief Comparison operator.
             * @param x sensor_msgs::srv::SetCameraInfo_Response object to compare.
             */
            eProsima_user_DllExport bool operator !=(
                    const SetCameraInfo_Response& x) const;

            /*!
             * @brief This function sets a value in member success
             * @param _success New value for member success
             */
            eProsima_user_DllExport void success(
                    bool _success);

            /*!
             * @brief This function returns the value of member success
             * @return Value of member success
             */
            eProsima_user_DllExport bool success() const;

            /*!
             * @brief This function returns a reference to member success
             * @return Reference to member success
             */
            eProsima_user_DllExport bool& success();


            /*!
             * @brief This function copies the value in member status_message
             * @param _status_message New value to be copied in member status_message
             */
            eProsima_user_DllExport void status_message(
                    const std::string& _status_message);

            /*!
             * @brief This function moves the value in member status_message
             * @param _status_message New value to be moved in member status_message
             */
            eProsima_user_DllExport void status_message(
                    std::string&& _status_message);

            /*!
             * @brief This function returns a constant reference to member status_message
             * @return Constant reference to member status_message
             */
            eProsima_user_DllExport const std::string& status_message() const;

            /*!
             * @brief This function returns a reference to member status_message
             * @return Reference to member status_message
             */
            eProsima_user_DllExport std::string& status_message();

        private:

            bool m_success{false};
            std::string m_status_message;

        };
    } // namespace srv
} // namespace sensor_msgs

#endif // _FAST_DDS_GENERATED_SENSOR_MSGS_SRV_SETCAMERAINFO_H_

