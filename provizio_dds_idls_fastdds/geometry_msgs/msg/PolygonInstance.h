// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file PolygonInstance.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_GEOMETRY_MSGS_MSG_POLYGONINSTANCE_H_
#define _FAST_DDS_GENERATED_GEOMETRY_MSGS_MSG_POLYGONINSTANCE_H_

#include <array>
#include <bitset>
#include <cstdint>
#include <map>
#include <string>
#include <vector>

#include <fastcdr/cdr/fixed_size_string.hpp>
#include <fastcdr/xcdr/optional.hpp>

#include "Polygon.h"


#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(POLYGONINSTANCE_SOURCE)
#define POLYGONINSTANCE_DllAPI __declspec( dllexport )
#else
#define POLYGONINSTANCE_DllAPI __declspec( dllimport )
#endif // POLYGONINSTANCE_SOURCE
#else
#define POLYGONINSTANCE_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define POLYGONINSTANCE_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
class CdrSizeCalculator;
} // namespace fastcdr
} // namespace eprosima



namespace geometry_msgs {
    namespace msg {
        /*!
         * @brief This class represents the structure PolygonInstance defined by the user in the IDL file.
         * @ingroup PolygonInstance
         */
        class PolygonInstance
        {
        public:

            /*!
             * @brief Default constructor.
             */
            eProsima_user_DllExport PolygonInstance();

            /*!
             * @brief Default destructor.
             */
            eProsima_user_DllExport ~PolygonInstance();

            /*!
             * @brief Copy constructor.
             * @param x Reference to the object geometry_msgs::msg::PolygonInstance that will be copied.
             */
            eProsima_user_DllExport PolygonInstance(
                    const PolygonInstance& x);

            /*!
             * @brief Move constructor.
             * @param x Reference to the object geometry_msgs::msg::PolygonInstance that will be copied.
             */
            eProsima_user_DllExport PolygonInstance(
                    PolygonInstance&& x) noexcept;

            /*!
             * @brief Copy assignment.
             * @param x Reference to the object geometry_msgs::msg::PolygonInstance that will be copied.
             */
            eProsima_user_DllExport PolygonInstance& operator =(
                    const PolygonInstance& x);

            /*!
             * @brief Move assignment.
             * @param x Reference to the object geometry_msgs::msg::PolygonInstance that will be copied.
             */
            eProsima_user_DllExport PolygonInstance& operator =(
                    PolygonInstance&& x) noexcept;

            /*!
             * @brief Comparison operator.
             * @param x geometry_msgs::msg::PolygonInstance object to compare.
             */
            eProsima_user_DllExport bool operator ==(
                    const PolygonInstance& x) const;

            /*!
             * @brief Comparison operator.
             * @param x geometry_msgs::msg::PolygonInstance object to compare.
             */
            eProsima_user_DllExport bool operator !=(
                    const PolygonInstance& x) const;

            /*!
             * @brief This function copies the value in member polygon
             * @param _polygon New value to be copied in member polygon
             */
            eProsima_user_DllExport void polygon(
                    const geometry_msgs::msg::Polygon& _polygon);

            /*!
             * @brief This function moves the value in member polygon
             * @param _polygon New value to be moved in member polygon
             */
            eProsima_user_DllExport void polygon(
                    geometry_msgs::msg::Polygon&& _polygon);

            /*!
             * @brief This function returns a constant reference to member polygon
             * @return Constant reference to member polygon
             */
            eProsima_user_DllExport const geometry_msgs::msg::Polygon& polygon() const;

            /*!
             * @brief This function returns a reference to member polygon
             * @return Reference to member polygon
             */
            eProsima_user_DllExport geometry_msgs::msg::Polygon& polygon();


            /*!
             * @brief This function sets a value in member id
             * @param _id New value for member id
             */
            eProsima_user_DllExport void id(
                    int64_t _id);

            /*!
             * @brief This function returns the value of member id
             * @return Value of member id
             */
            eProsima_user_DllExport int64_t id() const;

            /*!
             * @brief This function returns a reference to member id
             * @return Reference to member id
             */
            eProsima_user_DllExport int64_t& id();

        private:

            geometry_msgs::msg::Polygon m_polygon;
            int64_t m_id{0};

        };
    } // namespace msg
} // namespace geometry_msgs

#endif // _FAST_DDS_GENERATED_GEOMETRY_MSGS_MSG_POLYGONINSTANCE_H_

